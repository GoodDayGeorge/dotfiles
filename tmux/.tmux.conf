#------------------------------------------------------------------------------
# File:   $HOME/.tmux.conf
# Author: Petr Zemek <s3rvac@gmail.com>
#------------------------------------------------------------------------------

# Rebind the prefix from C-b to C-Space.
unbind C-b
set -g prefix C-Space
bind C-Space send-prefix

#------------------------------------------------------------------------------
# Settings.
#------------------------------------------------------------------------------

# Support 256 colors in the terminal.
set -g default-terminal "screen-256color"

# Disable the delay between the prefix and command. This increases Vim
# responsiveness.
set -sg escape-time 0

# Set the base index for windows to 1 instead of 0.
set -g base-index 1

# Set the base index for panes to 1 instead of 0.
setw -g pane-base-index 1

# Scrollback limit.
set -g history-limit 10000

# Allow scrolling by using the terminal emulator.
set -g terminal-overrides 'xterm*:smcup@:rmcup@'

# Pass xterm-style keys to make key combinations work as expected.
setw -g xterm-keys on

# Disable mouse in tmux. This makes tmux pass control directly to the used
# terminal emulator, so if you want, you can copy&paste as if you were not
# using tmux.
setw -g mode-mouse off

# Enable activity alerts.
setw -g monitor-activity on

# Prevent tmux from displaying "Activity in window X" messages.
set -g visual-activity off

# Enable vi keys.
set -g status-keys vi
setw -g mode-keys vi

# Enable utf-8.
setw -g utf8 on
set -g status-utf8 on

# Enable window titles.
set -g set-titles on

# Re-number windows when one is closed.
set -g renumber-windows on

#------------------------------------------------------------------------------
# Bindings.
#------------------------------------------------------------------------------

# Configuration file reload.
bind R source-file ~/.tmux.conf \; display "Configuration reloaded."

# Smart pane switching with awareness of Vim splits. Now, I can use Ctrl+hjkl
# in both Vim and Tmux (without using the prefix). This solution uses the
# following Vim plugin: https://github.com/christoomey/vim-tmux-navigator
# Note: I'm using the patch from
# https://github.com/christoomey/vim-tmux-navigator/pull/37 to make the
# detection working even when Vim is running as a subprocess (mc, ssh, etc.).
bind -n C-h if "tmux show-env tmux_navigator_bypass_#{pane_id} >/dev/null 2>&1" "send-keys C-h" "select-pane -L"
bind -n C-j if "tmux show-env tmux_navigator_bypass_#{pane_id} >/dev/null 2>&1" "send-keys C-j" "select-pane -D"
bind -n C-k if "tmux show-env tmux_navigator_bypass_#{pane_id} >/dev/null 2>&1" "send-keys C-k" "select-pane -U"
bind -n C-l if "tmux show-env tmux_navigator_bypass_#{pane_id} >/dev/null 2>&1" "send-keys C-l" "select-pane -R"
bind -n C-\ if "tmux show-env tmux_navigator_bypass_#{pane_id} >/dev/null 2>&1" "send-keys C-\\" "select-pane -l"

# Pane resizing.
bind -r M-h resize-pane -L 5
bind -r M-j resize-pane -D 5
bind -r M-k resize-pane -U 5
bind -r M-l resize-pane -R 5

# Pane splitting.
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

# Movement of windows.
bind -r < swap-window -t -1
bind -r > swap-window -t +1

# Make the prefix and 0 go to window number 10 (I use window numbering starting
# from 1).
bind 0 select-window -t :10

# Do not display the original window's name when renaming it. This makes
# renaming faster since one does not need to first erase the original name.
bind , command-prompt -p "(rename-window '#W')" "rename-window '%%'"

# Make f search only in window names (-N), not in titles (-T) or contents (-C).
# The default is -CNT.
bind f command-prompt -p "(find-window)" "find-window -N '%%'"

# Make copy mode behave more like Vim.
# Moreover, make 'y' copy also to the system clipboard.
bind -t vi-copy v begin-selection
bind -t vi-copy y copy-pipe 'xclip -in -selection clipboard'
bind -t vi-copy Y copy-line

#------------------------------------------------------------------------------
# Styling.
#------------------------------------------------------------------------------

# Status line.
set -g status-fg white
set -g status-bg black
set -g status-left ""
set -g status-right "#S "

# Window list.
setw -g window-status-fg colour246 # grey
setw -g window-status-bg default
setw -g window-status-attr dim
setw -g window-status-format "#[fg=colour172]#I#[fg=white] #W "

# Active window.
setw -g window-status-current-fg white
setw -g window-status-current-bg black
setw -g window-status-current-attr bright
setw -g window-status-current-format "#[fg=colour172]#I#[fg=white] #W#F"

# Window activity.
setw -g window-status-activity-bg black
setw -g window-status-activity-fg colour246 # grey

# Panes
set -g pane-border-fg white
set -g pane-border-bg black
set -g pane-active-border-fg green
set -g pane-active-border-bg black

# Command/message line.
set -g message-fg white
set -g message-bg black
set -g message-attr bright

# Status update interval.
set -g status-interval 60

# Make the window list appear at the left-hand side instead of at the center.
set -g status-justify left
